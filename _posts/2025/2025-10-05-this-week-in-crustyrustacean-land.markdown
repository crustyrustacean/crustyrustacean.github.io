---
layout: post
title:  "This Week in Crusty Rustacean-land"
date:   2025-10-05 06:00:00 -0700
description: "A weekly update on what's going on with me...and Rust"
categories: [Meta]
tags: [author update]
---

Looking back on the past week...and planning for the week ahead.

<!--more-->

I'm going to try something new..ish, a weekly update of sorts. I find it very hard to write consistently. I've written a couple of things now with AI and I feel...dirty about it. It's time to try to write on my own again.

The idea is I'm going to try to write for about 3o minutes each Sunday evening, to try to get to 500 words.

Let's go.

## The Road Travelled

*Hacktoberfest*

October 1 saw the start of Hacktoberfect. I'm maintainer for a URL shortener project being hosted by [Zero to Mastery](https://zerotomastery.io). I'm enjoying it, despite a few stumbles. It's honestly pretty low key, activity wise. I'm thinking maybe AI has put a chill on people wanting to code? The others at Zero to Mastery warned me of the insanity that usually ensues in October for this event, but I'm not seeing it.

Probably a good thing, considering my noobishness.

*Flux Limiter*

I built a lot of it over the 2nd last weekend of September, but I'm implementing my own take on a rate limiter in Rust. I call it [Flux Limiter](https://github.com/crustyrustacean/flux-limiter). Kind of proud of it, even though I have no idea if it actually works. AI and I wrote about it [here]({% post_url 2025/2025-09-23-flux-limiter-gcra-rate-limiting-made-easy %}).

*Flux HTTP*

My rate limiting thing is part of a more ambitious plan to make my own Rust web framework, which I'm christening [Flux Web](https://github.com/crustyrustacean/flux-web). I started dabbling with something that's becoming very Express like (i.e. Express for NodeJS). Rust web frameworks are wonderful...but complicated. I started thinking about whether there's room for something that focuses on Tera templating for HTML with the ability to serve up static assets (CSS and JavaScript). I'd like something where you just compose your site/app using functions that mirror the HTTP methods. You pass them a path, request, and desired response and the engine behind the scenes builds the thing. It would be all in a Rust binary that you could deploy via Docker...or Shuttle, perhaps with their dual binary capability.

Not sure how far I'll actually get with this, but it's worth a try.

*Flux HTTP Docs*

As I started into Flux Web, I realized I just don't know enough about HTTP itself. So I started an overly ambitious book called [Flux HTTP Docs](https://crusty-rustacean.com/flux-http-docs/). It's in an early draft condition, with 99% of the content generated by Claude AI. It takes you from nothing all the way up to a working web server. It's grand, but I'm hoping to contribute something which not only helps me, but others who might be learning HTTP.

## The Road Ahead

I'll continue to build out Flux HTTP Docs, but this week I want to make good on writing up something for the solution I came up with to run Pavex on Shuttle. Hacktoberfest has several more weeks to it, so if activity happens to pick up there it will dominate.

What are you building this week?

 